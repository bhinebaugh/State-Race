var Map, State, StateView, TheUSA,
    state, usa;

Map = {
    bottom: 23.079732,
    left: -125.712894,
    right: -65.419925,
    scale: 15,
    top: 49.267805
}

State = Backbone.Model.extend({
    initialize: function (attributes, options) {
        this.set({parent_map: attributes.parent_map});
    },
    setup: function () {
        var map = this.get('parent_map');
        this.set({
            neighbors:  _(this.get('neighbors')).map(function (name) {
                return map.get(name);
            })
        });
    },
    is_neighbor: function (state) {
        return _.contains(this.get('neighbors'), state);
    }
});

StateMapView = Backbone.View.extend({
    tagName: 'li',
    className: 'state-map',
    template: _.template("<b><%= id %>:</b> <%= capital %>"),
    render: function () {
        var x, y;
        x = Math.floor(Map.scale * (this.model.get('longitude') - Map.left));
        y = Math.floor(Map.scale * (Map.top - this.model.get('latitude')));
        this.$el.html(this.template(this.model.toJSON()));
        this.$el.css({
            left: x,
            position: 'absolute',
            top: y
        })
        return this;
    }
})

TheUSA = Backbone.Collection.extend({
    model: State,
    initialize: function (attributes, options) {
        this.add([
            {
                id: 'WA',
                name: 'Washington',
                capital: 'Olympia',
                latitude: 47.042418,
                longitude: -122.893077,
                neighbors: [],
                parent_map: this
            },
            {
                id: 'PA',
                name: 'Pennsylvania',
                capital: 'Harrisburg',
                latitude: 40.269789,
                longitude: -76.875613,
                neighbors: ['OH'],
                parent_map: this
            },
            {
                id: 'OH',
                name: 'Ohio',
                capital: 'Columbus',
                latitude: 39.962245,
                longitude: -83.000647,
                neighbors: ['PA'],
                parent_map: this
            }
        ]);
        _.each(this.models, function (state) {
            state.setup(); 
        });
    }
});

usa = new TheUSA;
usa_views = usa.map(function (state) {
    var stateView = new StateMapView({
        model: state,
        id: 'state-map-' + state.get('id')
    });
    $('body').prepend(stateView.el);
    stateView.render();
});
